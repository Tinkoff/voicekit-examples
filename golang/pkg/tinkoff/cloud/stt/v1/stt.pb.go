// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tinkoff/cloud/stt/v1/stt.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AudioEncoding int32

const (
	AudioEncoding_ENCODING_UNSPECIFIED AudioEncoding = 0
	AudioEncoding_LINEAR16             AudioEncoding = 1
	AudioEncoding_MULAW                AudioEncoding = 3
	AudioEncoding_ALAW                 AudioEncoding = 8
	AudioEncoding_RAW_OPUS             AudioEncoding = 11
	AudioEncoding_MPEG_AUDIO           AudioEncoding = 12
)

var AudioEncoding_name = map[int32]string{
	0:  "ENCODING_UNSPECIFIED",
	1:  "LINEAR16",
	3:  "MULAW",
	8:  "ALAW",
	11: "RAW_OPUS",
	12: "MPEG_AUDIO",
}

var AudioEncoding_value = map[string]int32{
	"ENCODING_UNSPECIFIED": 0,
	"LINEAR16":             1,
	"MULAW":                3,
	"ALAW":                 8,
	"RAW_OPUS":             11,
	"MPEG_AUDIO":           12,
}

func (x AudioEncoding) String() string {
	return proto.EnumName(AudioEncoding_name, int32(x))
}

func (AudioEncoding) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{0}
}

type RecognitionAudio struct {
	// Types that are valid to be assigned to AudioSource:
	//	*RecognitionAudio_Content
	//	*RecognitionAudio_Uri
	AudioSource          isRecognitionAudio_AudioSource `protobuf_oneof:"audio_source"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *RecognitionAudio) Reset()         { *m = RecognitionAudio{} }
func (m *RecognitionAudio) String() string { return proto.CompactTextString(m) }
func (*RecognitionAudio) ProtoMessage()    {}
func (*RecognitionAudio) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{0}
}

func (m *RecognitionAudio) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecognitionAudio.Unmarshal(m, b)
}
func (m *RecognitionAudio) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecognitionAudio.Marshal(b, m, deterministic)
}
func (m *RecognitionAudio) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecognitionAudio.Merge(m, src)
}
func (m *RecognitionAudio) XXX_Size() int {
	return xxx_messageInfo_RecognitionAudio.Size(m)
}
func (m *RecognitionAudio) XXX_DiscardUnknown() {
	xxx_messageInfo_RecognitionAudio.DiscardUnknown(m)
}

var xxx_messageInfo_RecognitionAudio proto.InternalMessageInfo

type isRecognitionAudio_AudioSource interface {
	isRecognitionAudio_AudioSource()
}

type RecognitionAudio_Content struct {
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
}

type RecognitionAudio_Uri struct {
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3,oneof"`
}

func (*RecognitionAudio_Content) isRecognitionAudio_AudioSource() {}

func (*RecognitionAudio_Uri) isRecognitionAudio_AudioSource() {}

func (m *RecognitionAudio) GetAudioSource() isRecognitionAudio_AudioSource {
	if m != nil {
		return m.AudioSource
	}
	return nil
}

func (m *RecognitionAudio) GetContent() []byte {
	if x, ok := m.GetAudioSource().(*RecognitionAudio_Content); ok {
		return x.Content
	}
	return nil
}

func (m *RecognitionAudio) GetUri() string {
	if x, ok := m.GetAudioSource().(*RecognitionAudio_Uri); ok {
		return x.Uri
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RecognitionAudio) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RecognitionAudio_Content)(nil),
		(*RecognitionAudio_Uri)(nil),
	}
}

type SpeechContext struct {
	Phrases              []string `protobuf:"bytes,1,rep,name=phrases,proto3" json:"phrases,omitempty"`
	Words                []string `protobuf:"bytes,2,rep,name=words,proto3" json:"words,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpeechContext) Reset()         { *m = SpeechContext{} }
func (m *SpeechContext) String() string { return proto.CompactTextString(m) }
func (*SpeechContext) ProtoMessage()    {}
func (*SpeechContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{1}
}

func (m *SpeechContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeechContext.Unmarshal(m, b)
}
func (m *SpeechContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeechContext.Marshal(b, m, deterministic)
}
func (m *SpeechContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeechContext.Merge(m, src)
}
func (m *SpeechContext) XXX_Size() int {
	return xxx_messageInfo_SpeechContext.Size(m)
}
func (m *SpeechContext) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeechContext.DiscardUnknown(m)
}

var xxx_messageInfo_SpeechContext proto.InternalMessageInfo

func (m *SpeechContext) GetPhrases() []string {
	if m != nil {
		return m.Phrases
	}
	return nil
}

func (m *SpeechContext) GetWords() []string {
	if m != nil {
		return m.Words
	}
	return nil
}

type WordInfo struct {
	StartTime            *duration.Duration `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *duration.Duration `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Word                 string             `protobuf:"bytes,3,opt,name=word,proto3" json:"word,omitempty"`
	Confidence           float32            `protobuf:"fixed32,4,opt,name=confidence,proto3" json:"confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WordInfo) Reset()         { *m = WordInfo{} }
func (m *WordInfo) String() string { return proto.CompactTextString(m) }
func (*WordInfo) ProtoMessage()    {}
func (*WordInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{2}
}

func (m *WordInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordInfo.Unmarshal(m, b)
}
func (m *WordInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordInfo.Marshal(b, m, deterministic)
}
func (m *WordInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordInfo.Merge(m, src)
}
func (m *WordInfo) XXX_Size() int {
	return xxx_messageInfo_WordInfo.Size(m)
}
func (m *WordInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WordInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WordInfo proto.InternalMessageInfo

func (m *WordInfo) GetStartTime() *duration.Duration {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *WordInfo) GetEndTime() *duration.Duration {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *WordInfo) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func (m *WordInfo) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

type VoiceActivityDetectionConfig struct {
	MinSpeechDuration        float32  `protobuf:"fixed32,1,opt,name=min_speech_duration,json=minSpeechDuration,proto3" json:"min_speech_duration,omitempty"`
	MaxSpeechDuration        float32  `protobuf:"fixed32,2,opt,name=max_speech_duration,json=maxSpeechDuration,proto3" json:"max_speech_duration,omitempty"`
	SilenceDurationThreshold float32  `protobuf:"fixed32,3,opt,name=silence_duration_threshold,json=silenceDurationThreshold,proto3" json:"silence_duration_threshold,omitempty"`
	SilenceProbThreshold     float32  `protobuf:"fixed32,4,opt,name=silence_prob_threshold,json=silenceProbThreshold,proto3" json:"silence_prob_threshold,omitempty"`
	Aggressiveness           float32  `protobuf:"fixed32,5,opt,name=aggressiveness,proto3" json:"aggressiveness,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *VoiceActivityDetectionConfig) Reset()         { *m = VoiceActivityDetectionConfig{} }
func (m *VoiceActivityDetectionConfig) String() string { return proto.CompactTextString(m) }
func (*VoiceActivityDetectionConfig) ProtoMessage()    {}
func (*VoiceActivityDetectionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{3}
}

func (m *VoiceActivityDetectionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoiceActivityDetectionConfig.Unmarshal(m, b)
}
func (m *VoiceActivityDetectionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoiceActivityDetectionConfig.Marshal(b, m, deterministic)
}
func (m *VoiceActivityDetectionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoiceActivityDetectionConfig.Merge(m, src)
}
func (m *VoiceActivityDetectionConfig) XXX_Size() int {
	return xxx_messageInfo_VoiceActivityDetectionConfig.Size(m)
}
func (m *VoiceActivityDetectionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_VoiceActivityDetectionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_VoiceActivityDetectionConfig proto.InternalMessageInfo

func (m *VoiceActivityDetectionConfig) GetMinSpeechDuration() float32 {
	if m != nil {
		return m.MinSpeechDuration
	}
	return 0
}

func (m *VoiceActivityDetectionConfig) GetMaxSpeechDuration() float32 {
	if m != nil {
		return m.MaxSpeechDuration
	}
	return 0
}

func (m *VoiceActivityDetectionConfig) GetSilenceDurationThreshold() float32 {
	if m != nil {
		return m.SilenceDurationThreshold
	}
	return 0
}

func (m *VoiceActivityDetectionConfig) GetSilenceProbThreshold() float32 {
	if m != nil {
		return m.SilenceProbThreshold
	}
	return 0
}

func (m *VoiceActivityDetectionConfig) GetAggressiveness() float32 {
	if m != nil {
		return m.Aggressiveness
	}
	return 0
}

type RecognitionConfig struct {
	Encoding                   AudioEncoding    `protobuf:"varint,1,opt,name=encoding,proto3,enum=tinkoff.cloud.stt.v1.AudioEncoding" json:"encoding,omitempty"`
	SampleRateHertz            uint32           `protobuf:"varint,2,opt,name=sample_rate_hertz,json=sampleRateHertz,proto3" json:"sample_rate_hertz,omitempty"`
	LanguageCode               string           `protobuf:"bytes,3,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	MaxAlternatives            uint32           `protobuf:"varint,4,opt,name=max_alternatives,json=maxAlternatives,proto3" json:"max_alternatives,omitempty"`
	ProfanityFilter            bool             `protobuf:"varint,5,opt,name=profanity_filter,json=profanityFilter,proto3" json:"profanity_filter,omitempty"`
	SpeechContexts             []*SpeechContext `protobuf:"bytes,6,rep,name=speech_contexts,json=speechContexts,proto3" json:"speech_contexts,omitempty"`
	EnableAutomaticPunctuation bool             `protobuf:"varint,8,opt,name=enable_automatic_punctuation,json=enableAutomaticPunctuation,proto3" json:"enable_automatic_punctuation,omitempty"`
    EnableDenormalization      bool             `protobuf:"varint,16,opt,name=enable_denormalization,json=enableDenormalization,proto3" json:"enable_denormalization,omitempty"`
	Model                      string           `protobuf:"bytes,10,opt,name=model,proto3" json:"model,omitempty"`
	NumChannels                uint32           `protobuf:"varint,12,opt,name=num_channels,json=numChannels,proto3" json:"num_channels,omitempty"`
	// Types that are valid to be assigned to Vad:
	//	*RecognitionConfig_DoNotPerformVad
	//	*RecognitionConfig_VadConfig
	Vad                  isRecognitionConfig_Vad `protobuf_oneof:"vad"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RecognitionConfig) Reset()         { *m = RecognitionConfig{} }
func (m *RecognitionConfig) String() string { return proto.CompactTextString(m) }
func (*RecognitionConfig) ProtoMessage()    {}
func (*RecognitionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{4}
}

func (m *RecognitionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecognitionConfig.Unmarshal(m, b)
}
func (m *RecognitionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecognitionConfig.Marshal(b, m, deterministic)
}
func (m *RecognitionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecognitionConfig.Merge(m, src)
}
func (m *RecognitionConfig) XXX_Size() int {
	return xxx_messageInfo_RecognitionConfig.Size(m)
}
func (m *RecognitionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RecognitionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RecognitionConfig proto.InternalMessageInfo

func (m *RecognitionConfig) GetEncoding() AudioEncoding {
	if m != nil {
		return m.Encoding
	}
	return AudioEncoding_ENCODING_UNSPECIFIED
}

func (m *RecognitionConfig) GetSampleRateHertz() uint32 {
	if m != nil {
		return m.SampleRateHertz
	}
	return 0
}

func (m *RecognitionConfig) GetLanguageCode() string {
	if m != nil {
		return m.LanguageCode
	}
	return ""
}

func (m *RecognitionConfig) GetMaxAlternatives() uint32 {
	if m != nil {
		return m.MaxAlternatives
	}
	return 0
}

func (m *RecognitionConfig) GetProfanityFilter() bool {
	if m != nil {
		return m.ProfanityFilter
	}
	return false
}

func (m *RecognitionConfig) GetSpeechContexts() []*SpeechContext {
	if m != nil {
		return m.SpeechContexts
	}
	return nil
}

func (m *RecognitionConfig) GetEnableAutomaticPunctuation() bool {
	if m != nil {
		return m.EnableAutomaticPunctuation
	}
	return false
}

func (m *RecognitionConfig) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *RecognitionConfig) GetNumChannels() uint32 {
	if m != nil {
		return m.NumChannels
	}
	return 0
}

type isRecognitionConfig_Vad interface {
	isRecognitionConfig_Vad()
}

type RecognitionConfig_DoNotPerformVad struct {
	DoNotPerformVad bool `protobuf:"varint,13,opt,name=do_not_perform_vad,json=doNotPerformVad,proto3,oneof"`
}

type RecognitionConfig_VadConfig struct {
	VadConfig *VoiceActivityDetectionConfig `protobuf:"bytes,14,opt,name=vad_config,json=vadConfig,proto3,oneof"`
}

func (*RecognitionConfig_DoNotPerformVad) isRecognitionConfig_Vad() {}

func (*RecognitionConfig_VadConfig) isRecognitionConfig_Vad() {}

func (m *RecognitionConfig) GetVad() isRecognitionConfig_Vad {
	if m != nil {
		return m.Vad
	}
	return nil
}

func (m *RecognitionConfig) GetDoNotPerformVad() bool {
	if x, ok := m.GetVad().(*RecognitionConfig_DoNotPerformVad); ok {
		return x.DoNotPerformVad
	}
	return false
}

func (m *RecognitionConfig) GetVadConfig() *VoiceActivityDetectionConfig {
	if x, ok := m.GetVad().(*RecognitionConfig_VadConfig); ok {
		return x.VadConfig
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RecognitionConfig) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RecognitionConfig_DoNotPerformVad)(nil),
		(*RecognitionConfig_VadConfig)(nil),
	}
}

type RecognizeRequest struct {
	Config               *RecognitionConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Audio                *RecognitionAudio  `protobuf:"bytes,2,opt,name=audio,proto3" json:"audio,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RecognizeRequest) Reset()         { *m = RecognizeRequest{} }
func (m *RecognizeRequest) String() string { return proto.CompactTextString(m) }
func (*RecognizeRequest) ProtoMessage()    {}
func (*RecognizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{5}
}

func (m *RecognizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecognizeRequest.Unmarshal(m, b)
}
func (m *RecognizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecognizeRequest.Marshal(b, m, deterministic)
}
func (m *RecognizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecognizeRequest.Merge(m, src)
}
func (m *RecognizeRequest) XXX_Size() int {
	return xxx_messageInfo_RecognizeRequest.Size(m)
}
func (m *RecognizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecognizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecognizeRequest proto.InternalMessageInfo

func (m *RecognizeRequest) GetConfig() *RecognitionConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *RecognizeRequest) GetAudio() *RecognitionAudio {
	if m != nil {
		return m.Audio
	}
	return nil
}

type SpeechRecognitionAlternative struct {
	Transcript           string      `protobuf:"bytes,1,opt,name=transcript,proto3" json:"transcript,omitempty"`
	Confidence           float32     `protobuf:"fixed32,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Words                []*WordInfo `protobuf:"bytes,3,rep,name=words,proto3" json:"words,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SpeechRecognitionAlternative) Reset()         { *m = SpeechRecognitionAlternative{} }
func (m *SpeechRecognitionAlternative) String() string { return proto.CompactTextString(m) }
func (*SpeechRecognitionAlternative) ProtoMessage()    {}
func (*SpeechRecognitionAlternative) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{6}
}

func (m *SpeechRecognitionAlternative) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeechRecognitionAlternative.Unmarshal(m, b)
}
func (m *SpeechRecognitionAlternative) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeechRecognitionAlternative.Marshal(b, m, deterministic)
}
func (m *SpeechRecognitionAlternative) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeechRecognitionAlternative.Merge(m, src)
}
func (m *SpeechRecognitionAlternative) XXX_Size() int {
	return xxx_messageInfo_SpeechRecognitionAlternative.Size(m)
}
func (m *SpeechRecognitionAlternative) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeechRecognitionAlternative.DiscardUnknown(m)
}

var xxx_messageInfo_SpeechRecognitionAlternative proto.InternalMessageInfo

func (m *SpeechRecognitionAlternative) GetTranscript() string {
	if m != nil {
		return m.Transcript
	}
	return ""
}

func (m *SpeechRecognitionAlternative) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *SpeechRecognitionAlternative) GetWords() []*WordInfo {
	if m != nil {
		return m.Words
	}
	return nil
}

type SpeechRecognitionResult struct {
	Alternatives         []*SpeechRecognitionAlternative `protobuf:"bytes,1,rep,name=alternatives,proto3" json:"alternatives,omitempty"`
	Channel              int32                           `protobuf:"varint,2,opt,name=channel,proto3" json:"channel,omitempty"`
	StartTime            *duration.Duration              `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *duration.Duration              `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *SpeechRecognitionResult) Reset()         { *m = SpeechRecognitionResult{} }
func (m *SpeechRecognitionResult) String() string { return proto.CompactTextString(m) }
func (*SpeechRecognitionResult) ProtoMessage()    {}
func (*SpeechRecognitionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{7}
}

func (m *SpeechRecognitionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeechRecognitionResult.Unmarshal(m, b)
}
func (m *SpeechRecognitionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeechRecognitionResult.Marshal(b, m, deterministic)
}
func (m *SpeechRecognitionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeechRecognitionResult.Merge(m, src)
}
func (m *SpeechRecognitionResult) XXX_Size() int {
	return xxx_messageInfo_SpeechRecognitionResult.Size(m)
}
func (m *SpeechRecognitionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeechRecognitionResult.DiscardUnknown(m)
}

var xxx_messageInfo_SpeechRecognitionResult proto.InternalMessageInfo

func (m *SpeechRecognitionResult) GetAlternatives() []*SpeechRecognitionAlternative {
	if m != nil {
		return m.Alternatives
	}
	return nil
}

func (m *SpeechRecognitionResult) GetChannel() int32 {
	if m != nil {
		return m.Channel
	}
	return 0
}

func (m *SpeechRecognitionResult) GetStartTime() *duration.Duration {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *SpeechRecognitionResult) GetEndTime() *duration.Duration {
	if m != nil {
		return m.EndTime
	}
	return nil
}

type RecognizeResponse struct {
	Results              []*SpeechRecognitionResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *RecognizeResponse) Reset()         { *m = RecognizeResponse{} }
func (m *RecognizeResponse) String() string { return proto.CompactTextString(m) }
func (*RecognizeResponse) ProtoMessage()    {}
func (*RecognizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{8}
}

func (m *RecognizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecognizeResponse.Unmarshal(m, b)
}
func (m *RecognizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecognizeResponse.Marshal(b, m, deterministic)
}
func (m *RecognizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecognizeResponse.Merge(m, src)
}
func (m *RecognizeResponse) XXX_Size() int {
	return xxx_messageInfo_RecognizeResponse.Size(m)
}
func (m *RecognizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecognizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecognizeResponse proto.InternalMessageInfo

func (m *RecognizeResponse) GetResults() []*SpeechRecognitionResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type InterimResultsConfig struct {
	EnableInterimResults bool     `protobuf:"varint,1,opt,name=enable_interim_results,json=enableInterimResults,proto3" json:"enable_interim_results,omitempty"`
	Interval             float32  `protobuf:"fixed32,2,opt,name=interval,proto3" json:"interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InterimResultsConfig) Reset()         { *m = InterimResultsConfig{} }
func (m *InterimResultsConfig) String() string { return proto.CompactTextString(m) }
func (*InterimResultsConfig) ProtoMessage()    {}
func (*InterimResultsConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{9}
}

func (m *InterimResultsConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InterimResultsConfig.Unmarshal(m, b)
}
func (m *InterimResultsConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InterimResultsConfig.Marshal(b, m, deterministic)
}
func (m *InterimResultsConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InterimResultsConfig.Merge(m, src)
}
func (m *InterimResultsConfig) XXX_Size() int {
	return xxx_messageInfo_InterimResultsConfig.Size(m)
}
func (m *InterimResultsConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_InterimResultsConfig.DiscardUnknown(m)
}

var xxx_messageInfo_InterimResultsConfig proto.InternalMessageInfo

func (m *InterimResultsConfig) GetEnableInterimResults() bool {
	if m != nil {
		return m.EnableInterimResults
	}
	return false
}

func (m *InterimResultsConfig) GetInterval() float32 {
	if m != nil {
		return m.Interval
	}
	return 0
}

type StreamingRecognitionConfig struct {
	Config               *RecognitionConfig    `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	SingleUtterance      bool                  `protobuf:"varint,2,opt,name=single_utterance,json=singleUtterance,proto3" json:"single_utterance,omitempty"`
	InterimResultsConfig *InterimResultsConfig `protobuf:"bytes,3,opt,name=interim_results_config,json=interimResultsConfig,proto3" json:"interim_results_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *StreamingRecognitionConfig) Reset()         { *m = StreamingRecognitionConfig{} }
func (m *StreamingRecognitionConfig) String() string { return proto.CompactTextString(m) }
func (*StreamingRecognitionConfig) ProtoMessage()    {}
func (*StreamingRecognitionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{10}
}

func (m *StreamingRecognitionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingRecognitionConfig.Unmarshal(m, b)
}
func (m *StreamingRecognitionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingRecognitionConfig.Marshal(b, m, deterministic)
}
func (m *StreamingRecognitionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingRecognitionConfig.Merge(m, src)
}
func (m *StreamingRecognitionConfig) XXX_Size() int {
	return xxx_messageInfo_StreamingRecognitionConfig.Size(m)
}
func (m *StreamingRecognitionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingRecognitionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingRecognitionConfig proto.InternalMessageInfo

func (m *StreamingRecognitionConfig) GetConfig() *RecognitionConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *StreamingRecognitionConfig) GetSingleUtterance() bool {
	if m != nil {
		return m.SingleUtterance
	}
	return false
}

func (m *StreamingRecognitionConfig) GetInterimResultsConfig() *InterimResultsConfig {
	if m != nil {
		return m.InterimResultsConfig
	}
	return nil
}

type StreamingRecognizeRequest struct {
	// Types that are valid to be assigned to StreamingRequest:
	//	*StreamingRecognizeRequest_StreamingConfig
	//	*StreamingRecognizeRequest_AudioContent
	StreamingRequest     isStreamingRecognizeRequest_StreamingRequest `protobuf_oneof:"streaming_request"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *StreamingRecognizeRequest) Reset()         { *m = StreamingRecognizeRequest{} }
func (m *StreamingRecognizeRequest) String() string { return proto.CompactTextString(m) }
func (*StreamingRecognizeRequest) ProtoMessage()    {}
func (*StreamingRecognizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{11}
}

func (m *StreamingRecognizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingRecognizeRequest.Unmarshal(m, b)
}
func (m *StreamingRecognizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingRecognizeRequest.Marshal(b, m, deterministic)
}
func (m *StreamingRecognizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingRecognizeRequest.Merge(m, src)
}
func (m *StreamingRecognizeRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingRecognizeRequest.Size(m)
}
func (m *StreamingRecognizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingRecognizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingRecognizeRequest proto.InternalMessageInfo

type isStreamingRecognizeRequest_StreamingRequest interface {
	isStreamingRecognizeRequest_StreamingRequest()
}

type StreamingRecognizeRequest_StreamingConfig struct {
	StreamingConfig *StreamingRecognitionConfig `protobuf:"bytes,1,opt,name=streaming_config,json=streamingConfig,proto3,oneof"`
}

type StreamingRecognizeRequest_AudioContent struct {
	AudioContent []byte `protobuf:"bytes,2,opt,name=audio_content,json=audioContent,proto3,oneof"`
}

func (*StreamingRecognizeRequest_StreamingConfig) isStreamingRecognizeRequest_StreamingRequest() {}

func (*StreamingRecognizeRequest_AudioContent) isStreamingRecognizeRequest_StreamingRequest() {}

func (m *StreamingRecognizeRequest) GetStreamingRequest() isStreamingRecognizeRequest_StreamingRequest {
	if m != nil {
		return m.StreamingRequest
	}
	return nil
}

func (m *StreamingRecognizeRequest) GetStreamingConfig() *StreamingRecognitionConfig {
	if x, ok := m.GetStreamingRequest().(*StreamingRecognizeRequest_StreamingConfig); ok {
		return x.StreamingConfig
	}
	return nil
}

func (m *StreamingRecognizeRequest) GetAudioContent() []byte {
	if x, ok := m.GetStreamingRequest().(*StreamingRecognizeRequest_AudioContent); ok {
		return x.AudioContent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamingRecognizeRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamingRecognizeRequest_StreamingConfig)(nil),
		(*StreamingRecognizeRequest_AudioContent)(nil),
	}
}

type StreamingRecognitionResult struct {
	RecognitionResult    *SpeechRecognitionResult `protobuf:"bytes,1,opt,name=recognition_result,json=recognitionResult,proto3" json:"recognition_result,omitempty"`
	IsFinal              bool                     `protobuf:"varint,2,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	Stability            float32                  `protobuf:"fixed32,3,opt,name=stability,proto3" json:"stability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *StreamingRecognitionResult) Reset()         { *m = StreamingRecognitionResult{} }
func (m *StreamingRecognitionResult) String() string { return proto.CompactTextString(m) }
func (*StreamingRecognitionResult) ProtoMessage()    {}
func (*StreamingRecognitionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{12}
}

func (m *StreamingRecognitionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingRecognitionResult.Unmarshal(m, b)
}
func (m *StreamingRecognitionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingRecognitionResult.Marshal(b, m, deterministic)
}
func (m *StreamingRecognitionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingRecognitionResult.Merge(m, src)
}
func (m *StreamingRecognitionResult) XXX_Size() int {
	return xxx_messageInfo_StreamingRecognitionResult.Size(m)
}
func (m *StreamingRecognitionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingRecognitionResult.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingRecognitionResult proto.InternalMessageInfo

func (m *StreamingRecognitionResult) GetRecognitionResult() *SpeechRecognitionResult {
	if m != nil {
		return m.RecognitionResult
	}
	return nil
}

func (m *StreamingRecognitionResult) GetIsFinal() bool {
	if m != nil {
		return m.IsFinal
	}
	return false
}

func (m *StreamingRecognitionResult) GetStability() float32 {
	if m != nil {
		return m.Stability
	}
	return 0
}

type StreamingRecognizeResponse struct {
	Results              []*StreamingRecognitionResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *StreamingRecognizeResponse) Reset()         { *m = StreamingRecognizeResponse{} }
func (m *StreamingRecognizeResponse) String() string { return proto.CompactTextString(m) }
func (*StreamingRecognizeResponse) ProtoMessage()    {}
func (*StreamingRecognizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8d636a652d9e0e87, []int{13}
}

func (m *StreamingRecognizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingRecognizeResponse.Unmarshal(m, b)
}
func (m *StreamingRecognizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingRecognizeResponse.Marshal(b, m, deterministic)
}
func (m *StreamingRecognizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingRecognizeResponse.Merge(m, src)
}
func (m *StreamingRecognizeResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingRecognizeResponse.Size(m)
}
func (m *StreamingRecognizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingRecognizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingRecognizeResponse proto.InternalMessageInfo

func (m *StreamingRecognizeResponse) GetResults() []*StreamingRecognitionResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterEnum("tinkoff.cloud.stt.v1.AudioEncoding", AudioEncoding_name, AudioEncoding_value)
	proto.RegisterType((*RecognitionAudio)(nil), "tinkoff.cloud.stt.v1.RecognitionAudio")
	proto.RegisterType((*SpeechContext)(nil), "tinkoff.cloud.stt.v1.SpeechContext")
	proto.RegisterType((*WordInfo)(nil), "tinkoff.cloud.stt.v1.WordInfo")
	proto.RegisterType((*VoiceActivityDetectionConfig)(nil), "tinkoff.cloud.stt.v1.VoiceActivityDetectionConfig")
	proto.RegisterType((*RecognitionConfig)(nil), "tinkoff.cloud.stt.v1.RecognitionConfig")
	proto.RegisterType((*RecognizeRequest)(nil), "tinkoff.cloud.stt.v1.RecognizeRequest")
	proto.RegisterType((*SpeechRecognitionAlternative)(nil), "tinkoff.cloud.stt.v1.SpeechRecognitionAlternative")
	proto.RegisterType((*SpeechRecognitionResult)(nil), "tinkoff.cloud.stt.v1.SpeechRecognitionResult")
	proto.RegisterType((*RecognizeResponse)(nil), "tinkoff.cloud.stt.v1.RecognizeResponse")
	proto.RegisterType((*InterimResultsConfig)(nil), "tinkoff.cloud.stt.v1.InterimResultsConfig")
	proto.RegisterType((*StreamingRecognitionConfig)(nil), "tinkoff.cloud.stt.v1.StreamingRecognitionConfig")
	proto.RegisterType((*StreamingRecognizeRequest)(nil), "tinkoff.cloud.stt.v1.StreamingRecognizeRequest")
	proto.RegisterType((*StreamingRecognitionResult)(nil), "tinkoff.cloud.stt.v1.StreamingRecognitionResult")
	proto.RegisterType((*StreamingRecognizeResponse)(nil), "tinkoff.cloud.stt.v1.StreamingRecognizeResponse")
}

func init() { proto.RegisterFile("tinkoff/cloud/stt/v1/stt.proto", fileDescriptor_8d636a652d9e0e87) }

var fileDescriptor_8d636a652d9e0e87 = []byte{
	// 1511 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0x4f, 0x4f, 0x23, 0xc9,
	0x15, 0xa7, 0xdb, 0x6d, 0x68, 0x3f, 0x0c, 0x34, 0xb5, 0x88, 0x78, 0x10, 0x1a, 0x91, 0x5e, 0x65,
	0x97, 0xb5, 0x34, 0xf6, 0x0c, 0x3b, 0x8a, 0xa2, 0xd5, 0x4a, 0x13, 0x63, 0x0c, 0x98, 0xcc, 0x00,
	0x29, 0xf3, 0x27, 0x7f, 0x36, 0xea, 0x14, 0xdd, 0x65, 0xbb, 0x34, 0x76, 0x97, 0xd3, 0x55, 0xed,
	0x30, 0x93, 0x5b, 0x2e, 0x39, 0x47, 0x9b, 0x53, 0x8e, 0xf9, 0x00, 0xb9, 0x44, 0xca, 0x17, 0xc9,
	0x17, 0xc8, 0x21, 0xa7, 0x7c, 0x85, 0x5c, 0xa2, 0xaa, 0xea, 0xb6, 0xc1, 0x78, 0xfe, 0x6c, 0x72,
	0x82, 0x7a, 0xef, 0xf7, 0xaa, 0xdf, 0xef, 0xfd, 0xab, 0x67, 0x78, 0x2c, 0x59, 0xfc, 0x9a, 0x77,
	0xbb, 0xf5, 0x70, 0xc0, 0xd3, 0xa8, 0x2e, 0xa4, 0xac, 0x8f, 0x9f, 0xa9, 0x3f, 0xb5, 0x51, 0xc2,
	0x25, 0x47, 0x1b, 0x99, 0xbe, 0xa6, 0xf5, 0x35, 0xa5, 0x18, 0x3f, 0xdb, 0x7a, 0xdc, 0xe3, 0xbc,
	0x37, 0xa0, 0x75, 0x8d, 0xb9, 0x49, 0xbb, 0xf5, 0x28, 0x4d, 0x88, 0x64, 0x3c, 0x36, 0x56, 0x5b,
	0xdb, 0x99, 0x9e, 0x8c, 0x58, 0x9d, 0xc4, 0x31, 0x97, 0x5a, 0x29, 0x8c, 0xd6, 0xc7, 0xe0, 0x61,
	0x1a, 0xf2, 0x5e, 0xcc, 0x94, 0xb4, 0x91, 0x46, 0x8c, 0xa3, 0x2d, 0x58, 0x0a, 0x79, 0x2c, 0x69,
	0x2c, 0x2b, 0xd6, 0x8e, 0xb5, 0x5b, 0x3e, 0x5e, 0xc0, 0xb9, 0x00, 0x21, 0x28, 0xa4, 0x09, 0xab,
	0xd8, 0x3b, 0xd6, 0x6e, 0xe9, 0x78, 0x01, 0xab, 0xc3, 0xfe, 0x2a, 0x94, 0x89, 0x32, 0x0c, 0x04,
	0x4f, 0x93, 0x90, 0xfa, 0x2f, 0x60, 0xa5, 0x33, 0xa2, 0x34, 0xec, 0x37, 0x95, 0xd1, 0xad, 0x44,
	0x15, 0x58, 0x1a, 0xf5, 0x13, 0x22, 0xa8, 0xa8, 0x58, 0x3b, 0x85, 0xdd, 0x12, 0xce, 0x8f, 0x68,
	0x03, 0x8a, 0xbf, 0xe5, 0x49, 0x24, 0x2a, 0xb6, 0x96, 0x9b, 0x83, 0xff, 0x57, 0x0b, 0xdc, 0x6b,
	0x9e, 0x44, 0xed, 0xb8, 0xcb, 0xd1, 0x8f, 0x00, 0x84, 0x24, 0x89, 0x0c, 0x24, 0x1b, 0x52, 0xed,
	0xd0, 0xf2, 0xde, 0xa3, 0x9a, 0x21, 0x55, 0xcb, 0x49, 0xd7, 0x0e, 0x32, 0xd2, 0xb8, 0xa4, 0xc1,
	0x17, 0x6c, 0x48, 0xd1, 0x73, 0x70, 0x69, 0x1c, 0x19, 0x3b, 0xfb, 0x43, 0x76, 0x4b, 0x34, 0x8e,
	0xb4, 0x15, 0x02, 0x47, 0x79, 0x51, 0x29, 0x28, 0x8a, 0x58, 0xff, 0x8f, 0x1e, 0x03, 0x84, 0x3c,
	0xee, 0xb2, 0x88, 0xc6, 0x21, 0xad, 0x38, 0x3b, 0xd6, 0xae, 0x8d, 0xef, 0x48, 0xfc, 0x3f, 0xdb,
	0xb0, 0x7d, 0xc5, 0x59, 0x48, 0x1b, 0xa1, 0x64, 0x63, 0x26, 0xdf, 0x1c, 0x50, 0x49, 0x43, 0x75,
	0x6f, 0x53, 0x81, 0x7a, 0xa8, 0x06, 0x9f, 0x0c, 0x59, 0x1c, 0x08, 0x1d, 0x96, 0x20, 0xcf, 0x90,
	0x66, 0x63, 0xe3, 0xf5, 0x21, 0x8b, 0x4d, 0xc0, 0x72, 0x6f, 0x34, 0x9e, 0xdc, 0x3e, 0xc0, 0xdb,
	0x19, 0x9e, 0xdc, 0xce, 0xe0, 0xbf, 0x86, 0x2d, 0xc1, 0x06, 0xca, 0x97, 0x09, 0x38, 0x90, 0xfd,
	0x84, 0x8a, 0x3e, 0x1f, 0x18, 0x2a, 0x36, 0xae, 0x64, 0x88, 0xdc, 0xe8, 0x22, 0xd7, 0xa3, 0xe7,
	0xb0, 0x99, 0x5b, 0x8f, 0x12, 0x7e, 0x73, 0xc7, 0xd2, 0x50, 0xdd, 0xc8, 0xb4, 0xe7, 0x09, 0xbf,
	0x99, 0x5a, 0x7d, 0x06, 0xab, 0xa4, 0xd7, 0x4b, 0xa8, 0x10, 0x6c, 0x4c, 0x63, 0x2a, 0x44, 0xa5,
	0xa8, 0xd1, 0x33, 0x52, 0xff, 0xdb, 0x22, 0xac, 0xdf, 0xa9, 0xb1, 0x2c, 0x22, 0x2f, 0x54, 0x72,
	0x42, 0x1e, 0xb1, 0xb8, 0xa7, 0xc3, 0xb0, 0xba, 0xf7, 0x69, 0x6d, 0x5e, 0x7d, 0xd7, 0x74, 0x4d,
	0xb6, 0x32, 0x28, 0x9e, 0x18, 0xa1, 0x2a, 0xac, 0x0b, 0x32, 0x1c, 0x0d, 0x68, 0x90, 0x10, 0x49,
	0x83, 0x3e, 0x4d, 0xe4, 0x5b, 0x1d, 0xa0, 0x15, 0xbc, 0x66, 0x14, 0x98, 0x48, 0x7a, 0xac, 0xc4,
	0xe8, 0x53, 0x58, 0x19, 0x90, 0xb8, 0x97, 0x92, 0x1e, 0x0d, 0x42, 0x1e, 0xd1, 0x2c, 0xb9, 0xe5,
	0x5c, 0xd8, 0xe4, 0x11, 0x45, 0x5f, 0x80, 0xa7, 0x62, 0x4e, 0x06, 0x92, 0x26, 0x31, 0x91, 0x6c,
	0x4c, 0x85, 0xe6, 0xbf, 0x82, 0xd7, 0x86, 0xe4, 0xb6, 0x71, 0x47, 0xac, 0xa0, 0xa3, 0x84, 0x77,
	0x49, 0xcc, 0xe4, 0x9b, 0xa0, 0xcb, 0x94, 0x4a, 0x93, 0x77, 0xf1, 0xda, 0x44, 0x7e, 0xa8, 0xc5,
	0xe8, 0x25, 0xac, 0x65, 0x59, 0x0c, 0x4d, 0x37, 0x88, 0xca, 0xe2, 0x4e, 0x61, 0x77, 0xf9, 0x5d,
	0x74, 0xef, 0x75, 0x0e, 0x5e, 0x15, 0x77, 0x8f, 0x02, 0xfd, 0x18, 0xb6, 0x69, 0x4c, 0x6e, 0x06,
	0x34, 0x20, 0xa9, 0xe4, 0x43, 0x22, 0x59, 0x18, 0x8c, 0xd2, 0x38, 0x94, 0xa9, 0x29, 0x10, 0x57,
	0x3b, 0xb1, 0x65, 0x30, 0x8d, 0x1c, 0x72, 0x3e, 0x45, 0xa8, 0x8e, 0x1b, 0xf2, 0x88, 0x0e, 0x2a,
	0xa0, 0x43, 0x60, 0x0e, 0xe8, 0xfb, 0x50, 0x8e, 0xd3, 0x61, 0x10, 0xf6, 0x49, 0x1c, 0xd3, 0x81,
	0xa8, 0x94, 0x35, 0xef, 0xe5, 0x38, 0x1d, 0x36, 0x33, 0x11, 0x7a, 0x02, 0x28, 0xe2, 0x41, 0xcc,
	0x65, 0x30, 0xa2, 0x49, 0x97, 0x27, 0xc3, 0x60, 0x4c, 0xa2, 0xca, 0x8a, 0xfa, 0xe0, 0xf1, 0x02,
	0x5e, 0x8b, 0xf8, 0x29, 0x97, 0xe7, 0x46, 0x73, 0x45, 0x22, 0xd4, 0x01, 0x18, 0x93, 0x28, 0xd0,
	0x4d, 0xd2, 0xab, 0xac, 0xea, 0xf6, 0xdb, 0x9b, 0x4f, 0xf9, 0x7d, 0x9d, 0x73, 0xbc, 0x80, 0x4b,
	0x63, 0x12, 0x99, 0xc3, 0x7e, 0x11, 0x0a, 0x63, 0x12, 0x9d, 0x38, 0xee, 0x92, 0xe7, 0x9e, 0x38,
	0x6e, 0xc9, 0x83, 0x13, 0xc7, 0x5d, 0xf6, 0xca, 0xb8, 0x92, 0x45, 0x45, 0x75, 0xab, 0x6e, 0xf8,
	0x80, 0x77, 0xbb, 0x82, 0x4a, 0x81, 0xdd, 0x21, 0x95, 0x24, 0x22, 0x92, 0xe0, 0x72, 0x2a, 0x68,
	0x40, 0xe3, 0x3e, 0x89, 0x43, 0x1a, 0xf9, 0x7f, 0xb4, 0x26, 0x93, 0xef, 0x2d, 0xc5, 0xf4, 0x37,
	0x29, 0x15, 0x12, 0xbd, 0x80, 0xc5, 0xcc, 0x61, 0x33, 0x67, 0x3e, 0x9f, 0xef, 0xf0, 0x83, 0x6a,
	0xc6, 0x99, 0x19, 0xfa, 0x1a, 0x8a, 0x7a, 0x14, 0x66, 0xf3, 0xe6, 0xb3, 0x0f, 0xda, 0xeb, 0xea,
	0xc6, 0xc6, 0xc8, 0xff, 0x93, 0x05, 0xdb, 0x26, 0xff, 0x77, 0x11, 0xd3, 0xc2, 0x53, 0x73, 0x48,
	0x26, 0x24, 0x16, 0x61, 0xc2, 0x46, 0x66, 0x38, 0x97, 0xf0, 0x1d, 0xc9, 0xcc, 0x9c, 0xb2, 0x67,
	0xe7, 0x14, 0x7a, 0x9e, 0x8f, 0xdb, 0x82, 0x2e, 0xc1, 0xc7, 0xf3, 0xdd, 0xcb, 0x47, 0x6f, 0x3e,
	0x8e, 0xff, 0x63, 0xc1, 0xf7, 0x1e, 0xb8, 0x85, 0xa9, 0x48, 0x07, 0x12, 0x5d, 0x41, 0xf9, 0x5e,
	0xc3, 0x58, 0xfa, 0xe2, 0xbd, 0xf7, 0xd5, 0xf6, 0x7c, 0x6e, 0xf8, 0xde, 0x3d, 0xea, 0xc9, 0xc8,
	0x8a, 0x51, 0xd3, 0x28, 0xe2, 0xfc, 0x38, 0xf3, 0x1e, 0x14, 0xfe, 0xc7, 0xf7, 0xc0, 0xf9, 0xd8,
	0xf7, 0xc0, 0xff, 0x66, 0x32, 0xbd, 0x54, 0x9d, 0x88, 0x11, 0x8f, 0x05, 0x45, 0x47, 0xb0, 0x94,
	0xe8, 0x00, 0xe4, 0x8c, 0x9f, 0x7c, 0x24, 0x63, 0x13, 0x36, 0x9c, 0x5b, 0xfb, 0x7d, 0xd8, 0x68,
	0xc7, 0x92, 0x26, 0x6c, 0x68, 0x34, 0x22, 0x1b, 0x8f, 0xcf, 0x61, 0x33, 0x2b, 0x69, 0x66, 0xd4,
	0xc1, 0xf4, 0x7b, 0xaa, 0xc5, 0x37, 0x8c, 0xf6, 0xbe, 0x2d, 0xda, 0x02, 0x57, 0xc3, 0xc7, 0x64,
	0x90, 0x65, 0x7f, 0x72, 0xf6, 0xff, 0x6d, 0xc1, 0x56, 0x47, 0x26, 0x94, 0x0c, 0xd5, 0x1c, 0x9d,
	0x33, 0x8f, 0xff, 0xcf, 0xd2, 0xff, 0x02, 0x3c, 0xc1, 0xe2, 0xde, 0x80, 0x06, 0xa9, 0x94, 0x34,
	0x21, 0x79, 0x05, 0xba, 0x78, 0xcd, 0xc8, 0x2f, 0x73, 0x31, 0xfa, 0x35, 0x6c, 0xce, 0xb0, 0xca,
	0xe7, 0x84, 0x49, 0x67, 0x75, 0xfe, 0xb7, 0xe7, 0x05, 0x0a, 0x6f, 0xb0, 0x39, 0x52, 0xff, 0xef,
	0x16, 0x3c, 0x9a, 0x25, 0x3b, 0x6d, 0xf3, 0x5f, 0x81, 0x27, 0x72, 0x65, 0x70, 0x8f, 0xf5, 0xd3,
	0x77, 0xa4, 0xf1, 0x9d, 0x71, 0x53, 0xa3, 0x6f, 0x72, 0x57, 0x16, 0xca, 0x1f, 0xc0, 0x8a, 0xd9,
	0x87, 0xf2, 0x2d, 0xca, 0xce, 0xb6, 0x28, 0xb3, 0x26, 0x35, 0x8d, 0x74, 0xff, 0x13, 0x58, 0x9f,
	0x7a, 0x91, 0x18, 0xd7, 0xfc, 0xbf, 0xbd, 0x23, 0x4b, 0x59, 0xbb, 0x7d, 0x03, 0x28, 0x99, 0x0a,
	0xb3, 0xe8, 0x65, 0xbe, 0x7f, 0xc7, 0x12, 0x5c, 0x4f, 0x1e, 0xdc, 0xfe, 0x08, 0x5c, 0x26, 0x82,
	0x2e, 0x8b, 0xb3, 0xf2, 0x71, 0xf1, 0x12, 0x13, 0x87, 0xea, 0x88, 0xb6, 0x41, 0x35, 0xd2, 0x0d,
	0x1b, 0x30, 0xf9, 0x26, 0xdb, 0x27, 0xa6, 0x02, 0x5f, 0x3e, 0x74, 0xfa, 0x4e, 0xb3, 0x9c, 0x4c,
	0x9b, 0xc5, 0xd6, 0xcd, 0xf2, 0x1d, 0xa2, 0x3c, 0xd3, 0x2f, 0x27, 0x8e, 0x6b, 0x79, 0xf6, 0x89,
	0xe3, 0x16, 0x3c, 0xa7, 0xfa, 0x4f, 0x0b, 0x56, 0xee, 0x6d, 0x07, 0xa8, 0x02, 0x1b, 0xad, 0xd3,
	0xe6, 0xd9, 0x41, 0xfb, 0xf4, 0x28, 0xb8, 0x3c, 0xed, 0x9c, 0xb7, 0x9a, 0xed, 0xc3, 0x76, 0xeb,
	0xc0, 0x5b, 0x40, 0x65, 0x70, 0x5f, 0xb6, 0x4f, 0x5b, 0x0d, 0xfc, 0xec, 0x87, 0x9e, 0x85, 0x4a,
	0x50, 0x7c, 0x75, 0xf9, 0xb2, 0x71, 0xed, 0x15, 0x90, 0x0b, 0x4e, 0x43, 0xfd, 0xe7, 0x2a, 0x08,
	0x6e, 0x5c, 0x07, 0x67, 0xe7, 0x97, 0x1d, 0x6f, 0x19, 0xad, 0x02, 0xbc, 0x3a, 0x6f, 0x1d, 0x05,
	0x8d, 0xcb, 0x83, 0xf6, 0x99, 0x57, 0xf6, 0x1d, 0xd7, 0xf6, 0x6c, 0xdf, 0x71, 0x1d, 0xcf, 0xf1,
	0x1d, 0xb7, 0xe8, 0x15, 0x7d, 0xc7, 0x5d, 0xf4, 0x16, 0x7d, 0xf5, 0x16, 0x2d, 0xf9, 0xea, 0x2d,
	0x2a, 0xf9, 0x8e, 0x0b, 0x1e, 0x54, 0x9d, 0xc3, 0x97, 0x8d, 0x66, 0xb5, 0xd0, 0x78, 0x85, 0xab,
	0x8b, 0x8d, 0x57, 0x38, 0xb8, 0xde, 0xaf, 0xba, 0x67, 0x47, 0x47, 0xfa, 0xe2, 0xea, 0x66, 0xe7,
	0xbc, 0xd5, 0xfa, 0x59, 0x70, 0xdd, 0xbe, 0x38, 0x0e, 0x8e, 0x5b, 0x8d, 0x83, 0x16, 0x0e, 0xf6,
	0x7f, 0x7e, 0xd1, 0xaa, 0x96, 0x8c, 0x77, 0x5f, 0xee, 0x1d, 0x56, 0x41, 0x81, 0xaf, 0xce, 0xf0,
	0x7e, 0xbb, 0xb3, 0xf7, 0x07, 0x1b, 0xca, 0x26, 0x81, 0x17, 0xfc, 0x42, 0xad, 0xd2, 0x6f, 0xa1,
	0x34, 0x09, 0x30, 0x7a, 0xff, 0xf3, 0x32, 0xa9, 0xf7, 0xad, 0xcf, 0x3f, 0x88, 0x33, 0x99, 0xf2,
	0xb7, 0x7f, 0xff, 0x8f, 0x7f, 0x7d, 0x6b, 0x6f, 0xfa, 0xeb, 0xd9, 0x0f, 0x8f, 0xaf, 0x92, 0x1c,
	0xf2, 0x95, 0x55, 0x45, 0xbf, 0x03, 0xf4, 0x30, 0xcb, 0xa8, 0xfe, 0x71, 0xc9, 0x9c, 0x7a, 0xf3,
	0xf4, 0xe3, 0x0d, 0x8c, 0x5b, 0xbb, 0xd6, 0x53, 0x6b, 0xff, 0x97, 0xbf, 0xf8, 0x69, 0x8f, 0xc9,
	0x7e, 0x7a, 0x53, 0x0b, 0xf9, 0xb0, 0x7e, 0x61, 0x6e, 0x68, 0x26, 0x34, 0x62, 0xb2, 0xf3, 0x46,
	0x48, 0x3a, 0x14, 0xf5, 0xb1, 0xda, 0x23, 0x5e, 0x33, 0xf9, 0x84, 0xde, 0xea, 0xfd, 0x4f, 0xd4,
	0x7b, 0x5c, 0x6d, 0x78, 0xf5, 0xd1, 0xeb, 0x5e, 0x7d, 0xde, 0x6f, 0xab, 0xbf, 0xd8, 0xc5, 0x8b,
	0xab, 0x9f, 0x74, 0xf0, 0xcd, 0xa2, 0x9e, 0xff, 0x5f, 0xfe, 0x37, 0x00, 0x00, 0xff, 0xff, 0x9a,
	0x80, 0x1f, 0x53, 0x82, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SpeechToTextClient is the client API for SpeechToText service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SpeechToTextClient interface {
	Recognize(ctx context.Context, in *RecognizeRequest, opts ...grpc.CallOption) (*RecognizeResponse, error)
	StreamingRecognize(ctx context.Context, opts ...grpc.CallOption) (SpeechToText_StreamingRecognizeClient, error)
}

type speechToTextClient struct {
	cc *grpc.ClientConn
}

func NewSpeechToTextClient(cc *grpc.ClientConn) SpeechToTextClient {
	return &speechToTextClient{cc}
}

func (c *speechToTextClient) Recognize(ctx context.Context, in *RecognizeRequest, opts ...grpc.CallOption) (*RecognizeResponse, error) {
	out := new(RecognizeResponse)
	err := c.cc.Invoke(ctx, "/tinkoff.cloud.stt.v1.SpeechToText/Recognize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *speechToTextClient) StreamingRecognize(ctx context.Context, opts ...grpc.CallOption) (SpeechToText_StreamingRecognizeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SpeechToText_serviceDesc.Streams[0], "/tinkoff.cloud.stt.v1.SpeechToText/StreamingRecognize", opts...)
	if err != nil {
		return nil, err
	}
	x := &speechToTextStreamingRecognizeClient{stream}
	return x, nil
}

type SpeechToText_StreamingRecognizeClient interface {
	Send(*StreamingRecognizeRequest) error
	Recv() (*StreamingRecognizeResponse, error)
	grpc.ClientStream
}

type speechToTextStreamingRecognizeClient struct {
	grpc.ClientStream
}

func (x *speechToTextStreamingRecognizeClient) Send(m *StreamingRecognizeRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *speechToTextStreamingRecognizeClient) Recv() (*StreamingRecognizeResponse, error) {
	m := new(StreamingRecognizeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SpeechToTextServer is the server API for SpeechToText service.
type SpeechToTextServer interface {
	Recognize(context.Context, *RecognizeRequest) (*RecognizeResponse, error)
	StreamingRecognize(SpeechToText_StreamingRecognizeServer) error
}

func RegisterSpeechToTextServer(s *grpc.Server, srv SpeechToTextServer) {
	s.RegisterService(&_SpeechToText_serviceDesc, srv)
}

func _SpeechToText_Recognize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecognizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpeechToTextServer).Recognize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tinkoff.cloud.stt.v1.SpeechToText/Recognize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpeechToTextServer).Recognize(ctx, req.(*RecognizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SpeechToText_StreamingRecognize_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SpeechToTextServer).StreamingRecognize(&speechToTextStreamingRecognizeServer{stream})
}

type SpeechToText_StreamingRecognizeServer interface {
	Send(*StreamingRecognizeResponse) error
	Recv() (*StreamingRecognizeRequest, error)
	grpc.ServerStream
}

type speechToTextStreamingRecognizeServer struct {
	grpc.ServerStream
}

func (x *speechToTextStreamingRecognizeServer) Send(m *StreamingRecognizeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *speechToTextStreamingRecognizeServer) Recv() (*StreamingRecognizeRequest, error) {
	m := new(StreamingRecognizeRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SpeechToText_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tinkoff.cloud.stt.v1.SpeechToText",
	HandlerType: (*SpeechToTextServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Recognize",
			Handler:    _SpeechToText_Recognize_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamingRecognize",
			Handler:       _SpeechToText_StreamingRecognize_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "tinkoff/cloud/stt/v1/stt.proto",
}
